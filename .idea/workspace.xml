<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="64276499-8db4-4aff-a176-0bff1cfaeae0" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/src/deadlock/MustDeadLock.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/deadlock/TransferMoney.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>run</find>
      <find>thread</find>
      <find>run(</find>
      <find>y</find>
      <find>target</find>
      <find>run()</find>
      <find>new Thread(</find>
      <find>new Thread</find>
      <find>ThreadFactory</find>
      <find>DefaultThreadFac</find>
      <find>newThread</find>
      <find>TimerTask</find>
      <find>start()</find>
      <find>can</find>
      <find>interr</find>
      <find>·</find>
      <find>join</find>
      <find>setName</find>
      <find>priority</find>
      <find>MAX_PRIORITY</find>
      <find>`</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1T9Y0OW95hcfbrxt7t40FobC94P" />
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="com.android.tools.idea.instantapp.provision.ProvisionBeforeRunTaskProvider.myTimeStamp" value="1572256618832" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="File.Encoding" />
  </component>
  <component name="RecentsManager">
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="threadcoreknowledge.stopthread" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Application.TransferMoney">
    <configuration name="MustDeadLock" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="deadlock.MustDeadLock" />
      <module name="javathread" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="deadlock.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OutOfOrderExecution" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="jmm.OutOfOrderExecution" />
      <module name="javathread" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="jmm.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SingletonInPractice" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="singleton.SingletonInPractice" />
      <module name="javathread" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="singleton.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SynchronizeVisibility" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="jmm.SynchronizeVisibility" />
      <module name="javathread" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="jmm.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TransferMoney" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="deadlock.TransferMoney" />
      <module name="javathread" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="deadlock.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.OutOfOrderExecution" />
      <item itemvalue="Application.SynchronizeVisibility" />
      <item itemvalue="Application.SingletonInPractice" />
      <item itemvalue="Application.MustDeadLock" />
      <item itemvalue="Application.TransferMoney" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Application.TransferMoney" />
        <item itemvalue="Application.MustDeadLock" />
        <item itemvalue="Application.SingletonInPractice" />
        <item itemvalue="Application.SynchronizeVisibility" />
        <item itemvalue="Application.OutOfOrderExecution" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="64276499-8db4-4aff-a176-0bff1cfaeae0" name="Default Changelist" comment="" />
      <created>1563634118214</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1563634118214</updated>
      <workItem from="1563634124102" duration="2950000" />
      <workItem from="1563671735539" duration="10216000" />
      <workItem from="1563981933215" duration="90000" />
      <workItem from="1564066198431" duration="7633000" />
      <workItem from="1570522100098" duration="4654000" />
      <workItem from="1570540533210" duration="308000" />
      <workItem from="1570585669010" duration="2874000" />
      <workItem from="1571036580052" duration="5802000" />
      <workItem from="1571119499584" duration="19509000" />
      <workItem from="1571276545878" duration="12774000" />
      <workItem from="1571362192521" duration="12628000" />
      <workItem from="1571620152992" duration="13861000" />
      <workItem from="1571706854422" duration="12457000" />
      <workItem from="1571815522106" duration="7548000" />
      <workItem from="1571880150302" duration="602000" />
      <workItem from="1571903776862" duration="74000" />
      <workItem from="1571903880827" duration="6144000" />
      <workItem from="1571969798563" duration="4206000" />
      <workItem from="1572228409883" duration="13581000" />
      <workItem from="1572873556336" duration="3027000" />
      <workItem from="1572958383396" duration="5407000" />
      <workItem from="1573055735496" duration="49000" />
      <workItem from="1573136303395" duration="3232000" />
    </task>
    <task id="LOCAL-00001" summary="1. 验证synchronize的可重入性质 2. 验证synchronize的可重入粒度 &#10;3. synchronize关键字反编译指令">
      <created>1570540822605</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1570540822605</updated>
    </task>
    <task id="LOCAL-00002" summary="1. 利用匿名内部类创建线程 2. 利用线程池创建线程 3. 利用lambda表达式创建&#10;线程 4.利用线程池创建线程 5. 创建线程的两种方式 6. 同时使用实现Runnable&#10;接口和继承Thread类来创建线程的情况。">
      <created>1571046828601</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1571046828601</updated>
    </task>
    <task id="LOCAL-00003" summary="1. 线程无法启动两次 2. start方法和run方法的区别 3. 停止线程的最佳实践">
      <created>1571204188343</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1571204188343</updated>
    </task>
    <task id="LOCAL-00004" summary="1. 错误停止线程的方法使用: stop() 2. 利用全局volatile变量 -&gt; 无法停止&#10;阻塞中的线程 3. sleep()会响应interrupt()方法且会重置interrupt方法设置的&#10;状态 4. 处理线程中断的最佳实践 -&gt; 优先选择在方法上抛出异常，&#10;使异常传递到run()方法。run方法无法抛出异常必须处理异常 5. 恢复中断 -&gt;&#10;在子方法中利用interrupt()方法重新标记当前线程的中断状态">
      <created>1571219401449</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1571219401449</updated>
    </task>
    <task id="LOCAL-00005" summary="1. email switch test">
      <created>1571279008939</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1571279008939</updated>
    </task>
    <task id="LOCAL-00006" summary="1. 测试线程的六种状态 2. 测试wait和notify的基本用法">
      <created>1571304397207</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1571304397207</updated>
    </task>
    <task id="LOCAL-00007" summary="1. 利用wait notify实现生产者/消费者模式 2. 利用synchronize关键字打印100&#10;以内的奇数偶数 3. 利用wait notify打印100以内的偶数 4. 测试notify，&#10;notifyAll方法的区别">
      <created>1571391376244</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1571391376244</updated>
    </task>
    <task id="LOCAL-00008" summary="1. 对比sleep()方法和wait()方法的区别 2. join()方法的使用 3. join()方法的&#10;中断">
      <created>1571650606361</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1571650606361</updated>
    </task>
    <task id="LOCAL-00009" summary="1. 测试线程的四个属性&#10;2. 线程的异常处理&#10;3. Thread.join() 方法&#10;4. Thread.yield() 方法">
      <created>1571739000464</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1571739000464</updated>
    </task>
    <task id="LOCAL-00010" summary="1. 线程同步问题: 结果错误(在何处以及何时发生) -&gt; synchronize线程可见, &#10;index++不同步">
      <created>1571824154884</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1571824154884</updated>
    </task>
    <task id="LOCAL-00011" summary="1. 必然死锁 2. 初始化未完毕，就this赋值 3.private对象逃逸">
      <created>1571909480665</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1571909480665</updated>
    </task>
    <task id="LOCAL-00012" summary="1. 两种饿汉式单例写法, 直接复制，静态代码块">
      <created>1572878408590</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1572878408590</updated>
    </task>
    <task id="LOCAL-00013" summary="1. 单例的写法 -静态变量直接赋值 -静态内部类 -synchronize关键字加锁&#10;-双重检查 -使用枚举(推荐)">
      <created>1572976045899</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1572976045899</updated>
    </task>
    <option name="localTasksCounter" value="14" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="RECENT_FILTERS">
      <map>
        <entry key="Branch">
          <value>
            <list />
          </value>
        </entry>
        <entry key="User">
          <value>
            <list />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="1. 验证synchronize的可重入性质 2. 验证synchronize的可重入粒度 &#10;3. synchronize关键字反编译指令" />
    <MESSAGE value="1. 利用匿名内部类创建线程 2. 利用线程池创建线程 3. 利用lambda表达式创建&#10;线程 4.利用线程池创建线程 5. 创建线程的两种方式 6. 同时使用实现Runnable&#10;接口和继承Thread类来创建线程的情况。" />
    <MESSAGE value="1. 线程无法启动两次 2. start方法和run方法的区别 3. 停止线程的最佳实践" />
    <MESSAGE value="1. 错误停止线程的方法使用: stop() 2. 利用全局volatile变量 -&gt; 无法停止&#10;阻塞中的线程 3. sleep()会响应interrupt()方法且会重置interrupt方法设置的&#10;状态 4. 处理线程中断的最佳实践 -&gt; 优先选择在方法上抛出异常，&#10;使异常传递到run()方法。run方法无法抛出异常必须处理异常 5. 恢复中断 -&gt;&#10;在子方法中利用interrupt()方法重新标记当前线程的中断状态" />
    <MESSAGE value="1. email switch test" />
    <MESSAGE value="1. 测试线程的六种状态 2. 测试wait和notify的基本用法" />
    <MESSAGE value="1. 利用wait notify实现生产者/消费者模式 2. 利用synchronize关键字打印100&#10;以内的奇数偶数 3. 利用wait notify打印100以内的偶数 4. 测试notify，&#10;notifyAll方法的区别" />
    <MESSAGE value="1. 对比sleep()方法和wait()方法的区别 2. join()方法的使用 3. join()方法的&#10;中断" />
    <MESSAGE value="1. 测试线程的四个属性&#10;2. 线程的异常处理&#10;3. Thread.join() 方法&#10;4. Thread.yield() 方法" />
    <MESSAGE value="1. 验证了线程结果错误(在何处以及何时发生) -&gt; synchronize线程可见, &#10;index++不同步" />
    <MESSAGE value="1. 线程同步问题: 结果错误(在何处以及何时发生) -&gt; synchronize线程可见, &#10;index++不同步" />
    <MESSAGE value="1. 必然死锁 2. 初始化未完毕，就this赋值 3.private对象逃逸" />
    <MESSAGE value="1. 两种饿汉式单例写法, 直接复制，静态代码块" />
    <MESSAGE value="1. 单例的写法 -静态变量直接赋值 -静态内部类 -synchronize关键字加锁&#10;-双重检查 -使用枚举(推荐)" />
    <option name="LAST_COMMIT_MESSAGE" value="1. 单例的写法 -静态变量直接赋值 -静态内部类 -synchronize关键字加锁&#10;-双重检查 -使用枚举(推荐)" />
  </component>
  <component name="masterDetails">
    <states>
      <state key="ProjectJDKs.UI">
        <settings>
          <last-edited>9.0</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>